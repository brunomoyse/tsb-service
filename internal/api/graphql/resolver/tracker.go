package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.81

import (
	"context"
	"tsb-service/internal/api/graphql/model"
)

// PositionUpdated is the resolver for the positionUpdated field.
func (r *subscriptionResolver) PositionUpdated(ctx context.Context, deviceImei string) (<-chan *model.Position, error) {
	// make a buffered channel so we don't block broker.Publish
	out := make(chan *model.Position, 1)

	// subscribe to exactly this IMEIâ€™s topic
	updates := r.Broker.Subscribe(deviceImei)

	go func() {
		defer close(out)
		for {
			select {
			case <-ctx.Done():
				return
			case raw := <-updates:
				// raw will be your *model.Position
				if pos, ok := raw.(*model.Position); ok {
					out <- pos
				}
			}
		}
	}()

	return out, nil
}
