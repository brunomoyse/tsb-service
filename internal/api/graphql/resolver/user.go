package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.70

import (
	"context"
	"fmt"
	graphql1 "tsb-service/internal/api/graphql"
	"tsb-service/internal/api/graphql/model"
)

// Me is the resolver for the me field.
func (r *queryResolver) Me(ctx context.Context) (*model.User, error) {
	panic(fmt.Errorf("not implemented: Me - me"))
}

// Address is the resolver for the address field.
func (r *userResolver) Address(ctx context.Context, obj *model.User) (*model.Address, error) {
	panic(fmt.Errorf("not implemented: Address - address"))
}

// Orders is the resolver for the orders field.
func (r *userResolver) Orders(ctx context.Context, obj *model.User) ([]*model.Order, error) {
	panic(fmt.Errorf("not implemented: Orders - orders"))
}

// User returns graphql1.UserResolver implementation.
func (r *Resolver) User() graphql1.UserResolver { return &userResolver{r} }

type userResolver struct{ *Resolver }
