scalar Upload

type Product {
    code: String
    createdAt: DateTime!
    id: ID!
    isAvailable: Boolean!
    #isDiscountable: Boolean!
    isHalal: Boolean!
    isVegan: Boolean!
    isVisible: Boolean!
    pieceCount: Int
    price: String!
    slug: String!

    # Generated based on Accept-Language header
    name: String!
    description: String

    category: ProductCategory!

    # Admin only
    translations: [Translation!]!
}

type Translation {
    description: String
    language: String!
    name: String!
}

type ProductCategory {
    id: ID!
    order: Int!

    name: String!

    products: [Product!]!

    # Admin only
    translations: [Translation!]!
}

input CreateProductInput {
    categoryId: ID!
    code: String
    isAvailable: Boolean!
    isDiscountable: Boolean!
    isHalal: Boolean!
    isVegan: Boolean!
    isVisible: Boolean!
    pieceCount: Int
    price: String!

    # Translations
    translations: [TranslationInput!]!

    image: Upload
}

input UpdateProductInput {
    categoryID: ID
    code: String
    isAvailable: Boolean
    isHalal: Boolean
    isVegan: Boolean
    isVisible: Boolean
    pieceCount: Int
    price: String

    # Translations
    translations: [TranslationInput!]

    image: Upload
}

input TranslationInput {
    description: String
    language: String!
    name: String!
}

extend type Query {
    product(id: ID!): Product!
    products: [Product!]!

    productCategory(id: ID!): ProductCategory!
    productCategories: [ProductCategory!]!
}

extend type Mutation {
    createProduct (
        input: CreateProductInput!
    ): Product! @admin

    updateProduct(
        id: ID!
        input: UpdateProductInput!
    ): Product! @admin
}
